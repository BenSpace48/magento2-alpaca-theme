<script type="text/javascript">
    require([
        'VladimirPopov_WebForms/js/form',
        'jquery',
        'VladimirPopov_WebForms/js/sweetalert',
        'jquery/jquery.cookie'
    ], function(VarienForm, jQuery, swal) {
        // page-cache.js compatibility fix
        if ($('webform_<?= $this->getUid() ?>_iframe')) $('webform_<?= $this->getUid() ?>_iframe').prop = function(el) {};

        var webform_<?= $this->getUid() ?> = new VarienForm('webform_<?= $this->getUid() ?>', <?= (int) $this->getData('focus') ?>);
        jQuery('#webform_<?= $this->getUid() ?>').find('input[name=form_key]')[0].value = jQuery.cookie('form_key');
        $('webform_<?= $this->getUid() ?>_submit_button').observe('click', function() {
            var form = webform_<?= $this->getUid() ?>;
            if (form.validator && form.validator.validate()) {
                this.disable();
                form.submit();
                <?php if ($this->getAjax()) { ?>
                    this.disable();
                    $('webform_<?= $this->getUid() ?>_sending_data').show();
                <?php } ?>
            }
        });

        <?php if ($this->getAjax()) { ?>
            var iframe = $('webform_<?= $this->getUid() ?>_iframe');
            iframe.observe('load', function() {
                var doc = this.contentDocument ? this.contentDocument : this.contentWindow.document;
                var json = {
                    success: false
                };
                if (doc.body.getElementsByTagName('pre')[0] !== undefined && doc.body.getElementsByTagName('pre')[0].innerHTML.unfilterJSON())
                    json = doc.body.getElementsByTagName('pre')[0].innerHTML.evalJSON();
                else return;
                if (json.success > 0) {
                    if (json.script) {
                        eval(json.script);
                        return;
                    }
                    if (json.redirect_url) {
                        $('webform_<?= $block->escapeJs($this->getUid()) ?>_progress_text').update('<?= $block->escapeJs(__('Redirecting')) ?>');
                        window.location = json.redirect_url;
                        return;
                    }
                    var successText = json.success_text.unescapeHTML();
                    <?php if ($this->getData('after_submission_form')) { ?>
                        $('webform_<?= $this->getUid() ?>_sending_data').hide();
                        $('webform_<?= $this->getUid() ?>_submit_button').enable();
                        $('webform_<?= $this->getUid() ?>').reset();
                        if (typeof DROPZONE !== "undefined") {
                            if (typeof DROPZONE._<?= $this->getUid() ?> !== "undefined") {
                                for (var i = 0; i < DROPZONE._<?= $this->getUid() ?>.length; i++) {
                                    DROPZONE._<?= $this->getUid() ?>[i].reset();
                                }
                            }
                        }
                        swal.fire({
                            title: '<?= $block->escapeJs(__('Success!')) ?>',
                            html: successText,
                            type: 'success',
                            showCloseButton: true,
                            buttonsStyling: false,
                            customClass: {
                                actions: 'modal__bottom-actions',
                                confirmButton: 'button',
                                cancelButton: 'button button--secondary',
                                closeButton: 'button button--icon button--rotate-icon modal__close-button'
                            },
                            confirmButtonAriaLabel: 'Ok',
                            cancelButtonAriaLabel: 'Cancel',
                            reverseButtons: true,
                            width: 900,
                            padding: '40px'
                        });
                    <?php } else { ?>
                        $('webform_<?= $block->escapeJs($this->getUid()) ?>_progress_text').update('<?= $block->escapeJs(__('Complete')) ?>');
                        Effect.Fade('webform_<?= $this->getUid() ?>_form', {
                            duration: 0.5,
                            from: 1,
                            to: 0,
                            afterFinish: function() {
                                $('webform_<?= $this->getUid() ?>_success_text').update(successText).show();
                                Effect.Fade('webform_<?= $this->getUid() ?>_success_text', {
                                    duration: 0.5,
                                    from: 0,
                                    to: 1
                                });
                                if (<?= (int) $this->getData('scroll_to') ?>)
                                    Effect.ScrollTo('webform_<?= $this->getUid() ?>_success_text', {
                                        diration: '0.1',
                                        offset: -window.innerHeight / 2
                                    });
                            }
                        });
                    <?php } ?>
                    <?= $this->getData('after_submission_script') ?>
                } else {
                    var errorTxt = '';
                    $('webform_<?= $this->getUid() ?>_submit_button').enable();
                    if ($('webform_<?= $this->getUid() ?>_sending_data'))
                        $('webform_<?= $this->getUid() ?>_sending_data').hide();
                    if ($('webform_<?= $this->getUid() ?>_submit_button'))
                        $('webform_<?= $this->getUid() ?>_submit_button').enable();
                    if (json.errors && typeof(json.errors) == "string") {
                        errorTxt = json.errors.unescapeHTML();
                    } else {
                        errorTxt = '<?= str_replace("'", "\'", __('Unknown error(s) occured')) ?>';
                    }
                    swal.fire({
                        title: '<?= $block->escapeJs(__('Error')) ?>',
                        html: errorTxt,
                        type: 'error',
                        showCloseButton: true,
                        buttonsStyling: false,
                        customClass: {
                            actions: 'modal__bottom-actions',
                            confirmButton: 'button',
                            cancelButton: 'button button--secondary',
                            closeButton: 'button button--icon button--rotate-icon modal__close-button'
                        },
                        confirmButtonAriaLabel: 'Ok',
                        cancelButtonAriaLabel: 'Cancel',
                        reverseButtons: true,
                        width: 900,
                        padding: '40px'
                    });
                    if (json.script) {
                        eval(json.script);
                    }
                }
            });
        <?php } ?>
    });
</script>
